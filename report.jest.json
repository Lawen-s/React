{"numFailedTestSuites":1,"numFailedTests":10,"numPassedTestSuites":0,"numPassedTests":4,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":1,"numTotalTests":14,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1623315580209,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":["Thumbnail 컴포넌트 테스트","썸네일이 표현되어야 합니다"],"failureMessages":[],"fullName":"Thumbnail 컴포넌트 테스트 썸네일이 표현되어야 합니다 thumbnail 클래스를 가진 <img> 엘리먼트를 리턴해야 합니다","location":null,"status":"passed","title":"thumbnail 클래스를 가진 <img> 엘리먼트를 리턴해야 합니다"},{"ancestorTitles":["Thumbnail 컴포넌트 테스트","썸네일이 표현되어야 합니다"],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 1\nReceived: 0\n    at Object.<anonymous> (/home/lawen/코드스테이츠/5주/im-ha-section-1/src/__test__/Thumbnail.test.js:28:30)\n    at Promise.then.completed (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-circus/build/utils.js:276:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-circus/build/utils.js:216:10)\n    at _callCircusTest (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-circus/build/run.js:212:40)\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n    at _runTest (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-circus/build/run.js:149:3)\n    at _runTestsForDescribeBlock (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-circus/build/run.js:63:9)\n    at _runTestsForDescribeBlock (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-circus/build/run.js:57:9)\n    at _runTestsForDescribeBlock (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-circus/build/run.js:57:9)\n    at run (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-circus/build/run.js:25:3)\n    at runAndTransformResultsToJestFormat (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:176:21)\n    at jestAdapter (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:109:19)\n    at runTestInternal (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-runner/build/runTest.js:380:16)\n    at runTest (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-runner/build/runTest.js:472:34)"],"fullName":"Thumbnail 컴포넌트 테스트 썸네일이 표현되어야 합니다 `source` 라는 이름의 props으로 이미지 파일 이름을 전달받아야 합니다","location":null,"status":"failed","title":"`source` 라는 이름의 props으로 이미지 파일 이름을 전달받아야 합니다"},{"ancestorTitles":["Thumbnail 컴포넌트 테스트","썸네일이 표현되어야 합니다"],"failureMessages":["Error: expect(element).toHaveAttribute(\"src\", \"selfie.jpeg\") // element.getAttribute(\"src\") === \"selfie.jpeg\"\n\nExpected the element to have attribute:\n  src=\"selfie.jpeg\"\nReceived:\n  null\n    at Object.<anonymous> (/home/lawen/코드스테이츠/5주/im-ha-section-1/src/__test__/Thumbnail.test.js:34:54)\n    at Promise.then.completed (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-circus/build/utils.js:276:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-circus/build/utils.js:216:10)\n    at _callCircusTest (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-circus/build/run.js:212:40)\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n    at _runTest (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-circus/build/run.js:149:3)\n    at _runTestsForDescribeBlock (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-circus/build/run.js:63:9)\n    at _runTestsForDescribeBlock (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-circus/build/run.js:57:9)\n    at _runTestsForDescribeBlock (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-circus/build/run.js:57:9)\n    at run (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-circus/build/run.js:25:3)\n    at runAndTransformResultsToJestFormat (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:176:21)\n    at jestAdapter (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:109:19)\n    at runTestInternal (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-runner/build/runTest.js:380:16)\n    at runTest (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-runner/build/runTest.js:472:34)"],"fullName":"Thumbnail 컴포넌트 테스트 썸네일이 표현되어야 합니다 <img> 엘리먼트는 source props로 받은 이미지를 표시해야 합니다","location":null,"status":"failed","title":"<img> 엘리먼트는 source props로 받은 이미지를 표시해야 합니다"},{"ancestorTitles":["App 컴포넌트 테스트","메뉴에는 Gallery, About이라는 두 개의 항목이 존재해야 합니다"],"failureMessages":[],"fullName":"App 컴포넌트 테스트 메뉴에는 Gallery, About이라는 두 개의 항목이 존재해야 합니다 ul > li 엘리먼트 아래에 <Link> 컴포넌트가 두 개 존재해야 합니다","location":null,"status":"passed","title":"ul > li 엘리먼트 아래에 <Link> 컴포넌트가 두 개 존재해야 합니다"},{"ancestorTitles":["App 컴포넌트 테스트","메뉴에는 Gallery, About이라는 두 개의 항목이 존재해야 합니다"],"failureMessages":[],"fullName":"App 컴포넌트 테스트 메뉴에는 Gallery, About이라는 두 개의 항목이 존재해야 합니다 <Link> 컴포넌트는 각각 `/`, `/about` 주소로 이동할 수 있어야 합니다","location":null,"status":"passed","title":"<Link> 컴포넌트는 각각 `/`, `/about` 주소로 이동할 수 있어야 합니다"},{"ancestorTitles":["App 컴포넌트 테스트","페이지 영역이 존재하며, 메뉴 선택에 따라 페이지가 바뀌어야 합니다"],"failureMessages":["Error: expect(received).toBeDefined()\n\nReceived: undefined\n    at Object.<anonymous> (/home/lawen/코드스테이츠/5주/im-ha-section-1/src/__test__/App.test.js:40:38)\n    at Promise.then.completed (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-circus/build/utils.js:276:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-circus/build/utils.js:216:10)\n    at _callCircusTest (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-circus/build/run.js:212:40)\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n    at _runTest (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-circus/build/run.js:149:3)\n    at _runTestsForDescribeBlock (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-circus/build/run.js:63:9)\n    at _runTestsForDescribeBlock (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-circus/build/run.js:57:9)\n    at _runTestsForDescribeBlock (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-circus/build/run.js:57:9)\n    at run (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-circus/build/run.js:25:3)\n    at runAndTransformResultsToJestFormat (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:176:21)\n    at jestAdapter (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:109:19)\n    at runTestInternal (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-runner/build/runTest.js:380:16)\n    at runTest (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-runner/build/runTest.js:472:34)"],"fullName":"App 컴포넌트 테스트 페이지 영역이 존재하며, 메뉴 선택에 따라 페이지가 바뀌어야 합니다 `#page` 영역에 라우팅에 따른 페이지 분기를 구현해야 합니다","location":null,"status":"failed","title":"`#page` 영역에 라우팅에 따른 페이지 분기를 구현해야 합니다"},{"ancestorTitles":["App 컴포넌트 테스트","페이지 영역이 존재하며, 메뉴 선택에 따라 페이지가 바뀌어야 합니다"],"failureMessages":[],"fullName":"App 컴포넌트 테스트 페이지 영역이 존재하며, 메뉴 선택에 따라 페이지가 바뀌어야 합니다 기본적으로 <Gallery> 페이지가 보여야 합니다","location":null,"status":"passed","title":"기본적으로 <Gallery> 페이지가 보여야 합니다"},{"ancestorTitles":["App 컴포넌트 테스트","페이지 영역이 존재하며, 메뉴 선택에 따라 페이지가 바뀌어야 합니다"],"failureMessages":["Error: expect(received).toBeNull()\n\nReceived: <div class=\"flex\" id=\"list\" />\n    at Object.<anonymous> (/home/lawen/코드스테이츠/5주/im-ha-section-1/src/__test__/App.test.js:54:46)\n    at Promise.then.completed (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-circus/build/utils.js:276:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-circus/build/utils.js:216:10)\n    at _callCircusTest (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-circus/build/run.js:212:40)\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n    at _runTest (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-circus/build/run.js:149:3)\n    at _runTestsForDescribeBlock (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-circus/build/run.js:63:9)\n    at _runTestsForDescribeBlock (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-circus/build/run.js:57:9)\n    at _runTestsForDescribeBlock (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-circus/build/run.js:57:9)\n    at run (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-circus/build/run.js:25:3)\n    at runAndTransformResultsToJestFormat (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:176:21)\n    at jestAdapter (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:109:19)\n    at runTestInternal (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-runner/build/runTest.js:380:16)\n    at runTest (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-runner/build/runTest.js:472:34)"],"fullName":"App 컴포넌트 테스트 페이지 영역이 존재하며, 메뉴 선택에 따라 페이지가 바뀌어야 합니다 `/about` 주소로 이동하면, <About> 페이지가 보여야 합니다","location":null,"status":"failed","title":"`/about` 주소로 이동하면, <About> 페이지가 보여야 합니다"},{"ancestorTitles":["Gallery 컴포넌트 테스트","사진 목록이 map을 이용한 반복을 통해 보여져야 합니다"],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 3\nReceived: 0\n    at Object.<anonymous> (/home/lawen/코드스테이츠/5주/im-ha-section-1/src/__test__/Gallery.test.js:19:60)\n    at Promise.then.completed (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-circus/build/utils.js:276:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-circus/build/utils.js:216:10)\n    at _callCircusTest (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-circus/build/run.js:212:40)\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n    at _runTest (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-circus/build/run.js:149:3)\n    at _runTestsForDescribeBlock (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-circus/build/run.js:63:9)\n    at _runTestsForDescribeBlock (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-circus/build/run.js:57:9)\n    at _runTestsForDescribeBlock (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-circus/build/run.js:57:9)\n    at run (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-circus/build/run.js:25:3)\n    at runAndTransformResultsToJestFormat (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:176:21)\n    at jestAdapter (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:109:19)\n    at runTestInternal (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-runner/build/runTest.js:380:16)\n    at runTest (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-runner/build/runTest.js:472:34)"],"fullName":"Gallery 컴포넌트 테스트 사진 목록이 map을 이용한 반복을 통해 보여져야 합니다 #list 아래에 <a> 엘리먼트가 세 개 있어야합니다","location":null,"status":"failed","title":"#list 아래에 <a> 엘리먼트가 세 개 있어야합니다"},{"ancestorTitles":["Gallery 컴포넌트 테스트","사진 목록이 map을 이용한 반복을 통해 보여져야 합니다"],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 3\nReceived: 0\n    at Object.<anonymous> (/home/lawen/코드스테이츠/5주/im-ha-section-1/src/__test__/Gallery.test.js:24:76)\n    at Promise.then.completed (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-circus/build/utils.js:276:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-circus/build/utils.js:216:10)\n    at _callCircusTest (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-circus/build/run.js:212:40)\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n    at _runTest (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-circus/build/run.js:149:3)\n    at _runTestsForDescribeBlock (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-circus/build/run.js:63:9)\n    at _runTestsForDescribeBlock (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-circus/build/run.js:57:9)\n    at _runTestsForDescribeBlock (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-circus/build/run.js:57:9)\n    at run (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-circus/build/run.js:25:3)\n    at runAndTransformResultsToJestFormat (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:176:21)\n    at jestAdapter (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:109:19)\n    at runTestInternal (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-runner/build/runTest.js:380:16)\n    at runTest (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-runner/build/runTest.js:472:34)"],"fullName":"Gallery 컴포넌트 테스트 사진 목록이 map을 이용한 반복을 통해 보여져야 합니다 <a> 엘리먼트의 자식으로 <Thumbnail> 컴포넌트가 있어야합니다","location":null,"status":"failed","title":"<a> 엘리먼트의 자식으로 <Thumbnail> 컴포넌트가 있어야합니다"},{"ancestorTitles":["Gallery 컴포넌트 테스트","목록에서 선택한 사진은 별도로 크게 보여야 합니다"],"failureMessages":["Error: expect(jest.fn()).toBeCalled()\n\nExpected number of calls: >= 1\nReceived number of calls:    0\n    at Object.<anonymous> (/home/lawen/코드스테이츠/5주/im-ha-section-1/src/__test__/Gallery.test.js:47:25)\n    at Promise.then.completed (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-circus/build/utils.js:276:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-circus/build/utils.js:216:10)\n    at _callCircusTest (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-circus/build/run.js:212:40)\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n    at _runTest (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-circus/build/run.js:149:3)\n    at _runTestsForDescribeBlock (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-circus/build/run.js:63:9)\n    at _runTestsForDescribeBlock (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-circus/build/run.js:57:9)\n    at _runTestsForDescribeBlock (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-circus/build/run.js:57:9)\n    at run (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-circus/build/run.js:25:3)\n    at runAndTransformResultsToJestFormat (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:176:21)\n    at jestAdapter (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:109:19)\n    at runTestInternal (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-runner/build/runTest.js:380:16)\n    at runTest (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-runner/build/runTest.js:472:34)"],"fullName":"Gallery 컴포넌트 테스트 목록에서 선택한 사진은 별도로 크게 보여야 합니다 선택한 사진은 상태로 존재해야 하며, 초기값은 0번째 인덱스의 이미지여야 합니다","location":null,"status":"failed","title":"선택한 사진은 상태로 존재해야 하며, 초기값은 0번째 인덱스의 이미지여야 합니다"},{"ancestorTitles":["Gallery 컴포넌트 테스트","목록에서 선택한 사진은 별도로 크게 보여야 합니다"],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\nExpected: StringContaining \"hello.jpeg\"\nReceived: \"http://localhost/%ED%98%84%EC%9E%AC%EC%9D%B4%EB%AF%B8%EC%A7%80.jpeg\"\n    at Object.<anonymous> (/home/lawen/코드스테이츠/5주/im-ha-section-1/src/__test__/Gallery.test.js:64:59)\n    at Promise.then.completed (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-circus/build/utils.js:276:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-circus/build/utils.js:216:10)\n    at _callCircusTest (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-circus/build/run.js:212:40)\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n    at _runTest (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-circus/build/run.js:149:3)\n    at _runTestsForDescribeBlock (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-circus/build/run.js:63:9)\n    at _runTestsForDescribeBlock (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-circus/build/run.js:57:9)\n    at _runTestsForDescribeBlock (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-circus/build/run.js:57:9)\n    at run (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-circus/build/run.js:25:3)\n    at runAndTransformResultsToJestFormat (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:176:21)\n    at jestAdapter (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:109:19)\n    at runTestInternal (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-runner/build/runTest.js:380:16)\n    at runTest (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-runner/build/runTest.js:472:34)"],"fullName":"Gallery 컴포넌트 테스트 목록에서 선택한 사진은 별도로 크게 보여야 합니다 `#current-image`에 현재 선택한 사진이 표시되어야 합니다","location":null,"status":"failed","title":"`#current-image`에 현재 선택한 사진이 표시되어야 합니다"},{"ancestorTitles":["Gallery 컴포넌트 테스트","사진 목록에 있는 사진을 클릭하면, 현재 선택한 사진이 바뀌어야 합니다"],"failureMessages":["TypeError: Cannot read property 'onClick' of undefined\n    at Object.<anonymous> (/home/lawen/코드스테이츠/5주/im-ha-section-1/src/__test__/Gallery.test.js:80:21)\n    at Promise.then.completed (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-circus/build/utils.js:276:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-circus/build/utils.js:216:10)\n    at _callCircusTest (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-circus/build/run.js:212:40)\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n    at _runTest (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-circus/build/run.js:149:3)\n    at _runTestsForDescribeBlock (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-circus/build/run.js:63:9)\n    at _runTestsForDescribeBlock (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-circus/build/run.js:57:9)\n    at _runTestsForDescribeBlock (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-circus/build/run.js:57:9)\n    at run (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-circus/build/run.js:25:3)\n    at runAndTransformResultsToJestFormat (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:176:21)\n    at jestAdapter (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:109:19)\n    at runTestInternal (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-runner/build/runTest.js:380:16)\n    at runTest (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-runner/build/runTest.js:472:34)"],"fullName":"Gallery 컴포넌트 테스트 사진 목록에 있는 사진을 클릭하면, 현재 선택한 사진이 바뀌어야 합니다 <a> 엘리먼트를 클릭하면 handleClick 함수가 실행되고, 클릭한 이미지 정보가 인자로 전달되어야 합니다","location":null,"status":"failed","title":"<a> 엘리먼트를 클릭하면 handleClick 함수가 실행되고, 클릭한 이미지 정보가 인자로 전달되어야 합니다"},{"ancestorTitles":["Gallery 컴포넌트 테스트","사진 목록에 있는 사진을 클릭하면, 현재 선택한 사진이 바뀌어야 합니다"],"failureMessages":["Error: Unable to fire a \"click\" event - please provide a DOM element.\n    at createEvent (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/@testing-library/dom/dist/events.js:34:11)\n    at Function.createEvent.<computed> [as click] (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/@testing-library/dom/dist/events.js:120:38)\n    at Function.fireEvent.<computed> [as click] (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/@testing-library/dom/dist/events.js:125:68)\n    at Function.click (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/@testing-library/react/dist/fire-event.js:18:52)\n    at Object.<anonymous> (/home/lawen/코드스테이츠/5주/im-ha-section-1/src/__test__/Gallery.test.js:88:15)\n    at Promise.then.completed (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-circus/build/utils.js:276:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-circus/build/utils.js:216:10)\n    at _callCircusTest (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-circus/build/run.js:212:40)\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n    at _runTest (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-circus/build/run.js:149:3)\n    at _runTestsForDescribeBlock (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-circus/build/run.js:63:9)\n    at _runTestsForDescribeBlock (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-circus/build/run.js:57:9)\n    at _runTestsForDescribeBlock (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-circus/build/run.js:57:9)\n    at run (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-circus/build/run.js:25:3)\n    at runAndTransformResultsToJestFormat (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:176:21)\n    at jestAdapter (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:109:19)\n    at runTestInternal (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-runner/build/runTest.js:380:16)\n    at runTest (/home/lawen/코드스테이츠/5주/im-ha-section-1/node_modules/jest-runner/build/runTest.js:472:34)"],"fullName":"Gallery 컴포넌트 테스트 사진 목록에 있는 사진을 클릭하면, 현재 선택한 사진이 바뀌어야 합니다 handleClick 함수를 통해 선택한 사진에 대한 상태가 변경되어야 합니다","location":null,"status":"failed","title":"handleClick 함수를 통해 선택한 사진에 대한 상태가 변경되어야 합니다"}],"endTime":1623315583108,"message":"  ● Thumbnail 컴포넌트 테스트 › 썸네일이 표현되어야 합니다 › `source` 라는 이름의 props으로 이미지 파일 이름을 전달받아야 합니다\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 1\n    Received: 0\n\n      26 |     render(<Thumbnail source=\"selfie.jpeg\" />, { container })\n      27 |     const props = resq$('Thumbnail', container).props;\n    > 28 |     expect(Thumbnail.length).toBe(1)\n         |                              ^\n      29 |     expect(props).toHaveProperty('source', 'selfie.jpeg')\n      30 |   })\n      31 |\n\n      at Object.<anonymous> (src/__test__/Thumbnail.test.js:28:30)\n\n  ● Thumbnail 컴포넌트 테스트 › 썸네일이 표현되어야 합니다 › <img> 엘리먼트는 source props로 받은 이미지를 표시해야 합니다\n\n    expect(element).toHaveAttribute(\"src\", \"selfie.jpeg\") // element.getAttribute(\"src\") === \"selfie.jpeg\"\n\n    Expected the element to have attribute:\n      src=\"selfie.jpeg\"\n    Received:\n      null\n\n      32 |   it('<img> 엘리먼트는 source props로 받은 이미지를 표시해야 합니다', () => {\n      33 |     render(<Thumbnail source=\"selfie.jpeg\" />, { container })\n    > 34 |     expect(container.querySelector('img.thumbnail')).toHaveAttribute('src', 'selfie.jpeg')\n         |                                                      ^\n      35 |   })\n      36 | })\n\n      at Object.<anonymous> (src/__test__/Thumbnail.test.js:34:54)\n\n  ● App 컴포넌트 테스트 › 페이지 영역이 존재하며, 메뉴 선택에 따라 페이지가 바뀌어야 합니다 › `#page` 영역에 라우팅에 따른 페이지 분기를 구현해야 합니다\n\n    expect(received).toBeDefined()\n\n    Received: undefined\n\n      38 |     render(<App />, { container })\n      39 |     const switchComponent = resq$('Switch', container);\n    > 40 |     expect(switchComponent.children).toBeDefined();\n         |                                      ^\n      41 |   })\n      42 |\n      43 |   it('기본적으로 <Gallery> 페이지가 보여야 합니다', () => {\n\n      at Object.<anonymous> (src/__test__/App.test.js:40:38)\n\n  ● App 컴포넌트 테스트 › 페이지 영역이 존재하며, 메뉴 선택에 따라 페이지가 바뀌어야 합니다 › `/about` 주소로 이동하면, <About> 페이지가 보여야 합니다\n\n    expect(received).toBeNull()\n\n    Received: <div class=\"flex\" id=\"list\" />\n\n      52 |\n      53 |     expect(container.querySelector('#about-page')).toBeDefined()\n    > 54 |     expect(container.querySelector('#list')).toBeNull()\n         |                                              ^\n      55 |     expect(container.querySelector('#current-image')).toBeNull()\n      56 |   })\n      57 | })\n\n      at Object.<anonymous> (src/__test__/App.test.js:54:46)\n\n  ● Gallery 컴포넌트 테스트 › 사진 목록이 map을 이용한 반복을 통해 보여져야 합니다 › #list 아래에 <a> 엘리먼트가 세 개 있어야합니다\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 3\n    Received: 0\n\n      17 |   it('#list 아래에 <a> 엘리먼트가 세 개 있어야합니다', () => {\n      18 |     render(<Gallery />, { container })\n    > 19 |     expect(container.querySelectorAll('#list > a').length).toBe(3)\n         |                                                            ^\n      20 |   })\n      21 |\n      22 |   it('<a> 엘리먼트의 자식으로 <Thumbnail> 컴포넌트가 있어야합니다', () => {\n\n      at Object.<anonymous> (src/__test__/Gallery.test.js:19:60)\n\n  ● Gallery 컴포넌트 테스트 › 사진 목록이 map을 이용한 반복을 통해 보여져야 합니다 › <a> 엘리먼트의 자식으로 <Thumbnail> 컴포넌트가 있어야합니다\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 3\n    Received: 0\n\n      22 |   it('<a> 엘리먼트의 자식으로 <Thumbnail> 컴포넌트가 있어야합니다', () => {\n      23 |     render(<Gallery />, { container })\n    > 24 |     expect(container.querySelectorAll('#list > a > img.thumbnail').length).toBe(3)\n         |                                                                            ^\n      25 |   })\n      26 | })\n      27 |\n\n      at Object.<anonymous> (src/__test__/Gallery.test.js:24:76)\n\n  ● Gallery 컴포넌트 테스트 › 목록에서 선택한 사진은 별도로 크게 보여야 합니다 › 선택한 사진은 상태로 존재해야 하며, 초기값은 0번째 인덱스의 이미지여야 합니다\n\n    expect(jest.fn()).toBeCalled()\n\n    Expected number of calls: >= 1\n    Received number of calls:    0\n\n      45 |\n      46 |     render(<Gallery />, { container })\n    > 47 |     expect(useStateSpy).toBeCalled()\n         |                         ^\n      48 |     expect(initialValues).toEqual(expect.arrayContaining([images[0]])) // 상태의 초기값이 0번째 인덱스의 이미지어야 합니다\n      49 |\n      50 |     useStateSpy.mockRestore()\n\n      at Object.<anonymous> (src/__test__/Gallery.test.js:47:25)\n\n  ● Gallery 컴포넌트 테스트 › 목록에서 선택한 사진은 별도로 크게 보여야 합니다 › `#current-image`에 현재 선택한 사진이 표시되어야 합니다\n\n    expect(received).toEqual(expected) // deep equality\n\n    Expected: StringContaining \"hello.jpeg\"\n    Received: \"http://localhost/%ED%98%84%EC%9E%AC%EC%9D%B4%EB%AF%B8%EC%A7%80.jpeg\"\n\n      62 |     render(<Gallery />, { container })\n      63 |     // 현재 이미지가 hello.jpeg 이라고 가정합니다\n    > 64 |     expect(container.querySelector('#current-image').src).toEqual(expect.stringContaining('hello.jpeg'))\n         |                                                           ^\n      65 |     useStateSpy.mockRestore()\n      66 |   })\n      67 | })\n\n      at Object.<anonymous> (src/__test__/Gallery.test.js:64:59)\n\n  ● Gallery 컴포넌트 테스트 › 사진 목록에 있는 사진을 클릭하면, 현재 선택한 사진이 바뀌어야 합니다 › <a> 엘리먼트를 클릭하면 handleClick 함수가 실행되고, 클릭한 이미지 정보가 인자로 전달되어야 합니다\n\n    TypeError: Cannot read property 'onClick' of undefined\n\n      78 |     render(<Gallery />, { container })\n      79 |\n    > 80 |     const handler = resq$('a', container).props.onClick;\n         |                     ^\n      81 |     expect(typeof handler).toBe('function') // <a> 엘리먼트 클릭시 이벤트 핸들러가 존재합니다\n      82 |     expect(handler.toString()).toMatch('handleClick') // <a> 엘리먼트 클릭시 handleClick 함수가 실행됩니다\n      83 |   })\n\n      at Object.<anonymous> (src/__test__/Gallery.test.js:80:21)\n\n  ● Gallery 컴포넌트 테스트 › 사진 목록에 있는 사진을 클릭하면, 현재 선택한 사진이 바뀌어야 합니다 › handleClick 함수를 통해 선택한 사진에 대한 상태가 변경되어야 합니다\n\n    Unable to fire a \"click\" event - please provide a DOM element.\n\n      86 |     render(<Gallery />, { container })\n      87 |\n    > 88 |     fireEvent.click(container.querySelectorAll('a')[1]) // 1번째 인덱스의 썸네일 이미지를 클릭하면\n         |               ^\n      89 |     expect(container.querySelector('#current-image').src).toEqual(expect.stringContaining('cat.jpeg')) // 현재 이미지가 cat.jpeg가 됩니다\n      90 |\n      91 |     fireEvent.click(container.querySelectorAll('a')[2]) // 2번째 인덱스의 썸네일 이미지를 클릭하면\n\n      at createEvent (node_modules/@testing-library/dom/dist/events.js:34:11)\n      at Function.createEvent.<computed> [as click] (node_modules/@testing-library/dom/dist/events.js:120:38)\n      at Function.fireEvent.<computed> [as click] (node_modules/@testing-library/dom/dist/events.js:125:68)\n      at Function.click (node_modules/@testing-library/react/dist/fire-event.js:18:52)\n      at Object.<anonymous> (src/__test__/Gallery.test.js:88:15)\n","name":"/home/lawen/코드스테이츠/5주/im-ha-section-1/src/__test__/index.test.js","startTime":1623315580878,"status":"failed","summary":""}],"wasInterrupted":false}